=========================Where Clause Conditions==========================
1|select id, name from student where tot_cred>30
=========================Where Clause Conditions: conjunction==========================
2|select dept_name,budget from department where budget>40000 and budget<80000
=========================Where Clause Conditions: disjunction==========================
3|select building from classroom where capacity > 10 or capacity < 5


=========================Where Clause Conditions: String condition==========================
4|select id from instructor where salary>70000 and dept_name = 'cs'

=========================Queries with Joins==========================
5|select * from instructor, department where instructor.dept_name = department.dept_name
6|select name,course_id from instructor,teaches where instructor.ID = teaches.ID
7|select * from student join takes on student.ID = takes.ID
8|SELECT takes.course_id FROM student INNER JOIN takes ON(student.id=takes.id) INNER JOIN course ON(course.course_id=takes.course_id) WHERE student.id = '12345'
9|select name, title from (instructor natural join teaches) join course using (course_id)

=========================Queries Aggregate without Group By==========================
10|select min(salary) from instructor where dept_name = 'Comp. Sci.'
11|select max(salary) from instructor where dept_name = 'Comp. Sci.'
12|select sum(salary) from instructor where dept_name = 'Comp. Sci.'
13|select count(salary) from instructor where dept_name = 'Comp. Sci.'


=========================Queries Aggregate with Group By==========================
14|select dept_name, count(id) from student group by dept_name
15|select id, count(DISTINCT name) from student group by id
16|select name, avg(salary) from instructor group by name
17|SELECT COUNT(*) FROM instructor GROUP BY id, name
18|select ID, count(s_id) from instructor left outer join advisor on (instructor.ID = advisor.i_id) group by ID

=========================Queries with Group By and Constrained Aggregation==========================
19|select count(dept_name) from student group by name having count(id) < 5
20|SELECT dept_name, SUM(credits) FROM course INNER JOIN department USING (dept_name) WHERE credits >= 4 GROUP BY dept_name HAVING SUM(credits) < 25 


=========================Queries with DISTINCT==========================
21|SELECT DISTINCT dept_name FROM instructor 
22|select distinct s.id, s.name from student s, takes t where s.id = t.id and  t.grade != 'F' 

=========================Queries with NULL and NOT NULL==========================
23|select name from instructor where salary is null
24|select name from instructor where salary is not null

=========================Queries with Subqueries==========================
=========================From Clause Subqueries==========================
25|SELECT course.course_id, d.dept_name  FROM course LEFT OUTER JOIN (SELECT * from department WHERE department.budget > 70000) d using (dept_name)
26|select q1.ID from (select * from student where dept_name = 'Comp.Sci') AS q1 natural full outer join (select * from takes where semester = 'Spring' and year = 2009) AS q2
27|SELECT foo.name FROM (SELECT * FROM student join takes on (student.ID = takes.ID)) as foo
28|SELECT foo.name FROM (SELECT * FROM student join takes on (student.ID = takes.ID)) as foo, (SELECT * FROM student join takes on (student.ID = takes.ID)) as too 

29|SELECT * FROM (select credits, sum(credits) from course where credits > '2' group by dept_name, credits) as foo
30|SELECT * FROM (select distinct credits from course where credits > '2' ) as foo
31|SELECT foo.credits FROM (select credits, count(*) from course where credits > '2' group by dept_name, credits) as foo
32|SELECT * FROM (select sum(credits), count(credits) from course where credits > '2' group by dept_name, credits) as foo
33|SELECT * FROM (select course.dept_name, sum(credits) from course, department where (course.dept_name = department.dept_name) group by course.dept_name, credits) as foo
34|SELECT * FROM (select dept_name, count(credits) from course where credits > '2' group by dept_name having sum(credits)>3) as foo
35|SELECT * FROM student, (select  sum(credits) from course where credits > '2' group by dept_name having sum(credits)>3) as foo

36|SELECT foo.name FROM (SELECT * FROM  (SELECT * FROM  student join takes on (student.ID = takes.ID)) as foo ) as foo


=========================Where Clause Subqueries==========================

=========================Scalar Subqueries==========================
37|SELECT course_id FROM course WHERE credits = (SELECT MIN(credits) FROM course WHERE dept_name = 'CS')
38|select count(room_number) from classroom where  building = (select d.building from department as d where dept_name='Comp. Sci.')
39|select dept_name from department where budget = (select min(budget) from department) or budget = 10

=========================EXIST and NOT EXISTS CONNECTIVE==========================

=========================EXIST Without Correlation: 1 level==========================
40|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches where year=2009)

=========================NOT EXIST Without Correlation: 1 level==========================
41|SELECT name FROM instructor WHERE NOT EXISTS (SELECT * FROM teaches where year=2009)

=========================EXIST with Correlation: 1 level==========================
42SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches WHERE instructor.ID = teaches.ID)
42|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM department WHERE instructor.dept_name = department.dept_name)

43SELECT name FROM instructor WHERE NOT EXISTS (SELECT * FROM teaches WHERE instructor.ID = teaches.ID)
43|SELECT name FROM instructor WHERE NOT EXISTS (SELECT * FROM department WHERE instructor.dept_name = department.dept_name)


44|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches natural join instructor WHERE instructor.ID = teaches.ID and teaches.semester='Spring')
45|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 WHERE instructor.ID = t1.ID and EXISTS (select * from teaches t2 where t2.ID=t1.ID and t2.year=2010))

46|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 WHERE instructor.ID = t1.ID and NOT EXISTS (SELECT * FROM teaches t2 WHERE t2.ID=t1.ID and t2.year=2010))
47|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 natural join section WHERE instructor.ID = t1.ID and EXISTS (select * from teaches t2 where t2.ID=t1.ID and t2.year=2010 ))
48|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 natural join section WHERE instructor.ID = t1.ID and t1.year=2010 and EXISTS (select * from teaches t2 where instructor.ID =t2.ID)) AND instructor.ID='1'
49|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 natural join section WHERE t1.year=2010 and EXISTS (SELECT * FROM section WHERE semester = 'Spring' and year = 2010))
50|SELECT name FROM instructor natural join department WHERE EXISTS (SELECT * FROM teaches t1 natural join section WHERE instructor.ID = t1.ID and NOT EXISTS (select * from teaches t2 where t2.ID=t1.ID and t2.year=2010 ))
51|SELECT name FROM instructor natural join department WHERE NOT EXISTS (SELECT * FROM teaches t1 natural join section WHERE instructor.ID = t1.ID and EXISTS (select * from teaches t2 where t2.ID=t1.ID and t2.year=2010 ))
52|SELECT name FROM instructor natural join department WHERE NOT EXISTS (SELECT * FROM teaches t1 natural join section WHERE instructor.ID = t1.ID and NOT EXISTS (select * from teaches t2 where t2.ID=t1.ID and t2.year=2010 ))
53|SELECT * FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 WHERE EXISTS (select * from teaches t2 where instructor.ID=t1.ID ))
54|SELECT name FROM instructor natural join student natural join department WHERE EXISTS (SELECT * FROM teaches t1 WHERE instructor.ID = t1.ID and EXISTS (select * from teaches t2 where t2.ID=t1.ID and t2.year=2010 ))
55|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 WHERE instructor.ID = t1.ID and EXISTS (select * from teaches t2 where t2.year=2010 and t1.ID = t2.ID ))
56|SELECT name FROM instructor natural join department WHERE EXISTS (SELECT * FROM teaches t1 natural join section WHERE t1.ID = '10101' and  NOT EXISTS (select * from teaches t2 where  t2.year=2010 ))
57|SELECT name FROM instructor natural join department WHERE NOT EXISTS (SELECT * FROM teaches t1 natural join section WHERE t1.ID = '10101'  and EXISTS (select * from teaches t2 where t2.year=2010 ))
58|SELECT name FROM instructor natural join department WHERE NOT EXISTS (SELECT * FROM teaches t1 natural join section WHERE t1.ID = '10101' and NOT EXISTS (select * from teaches t2 where  t2.year=2010 ))
59| SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 natural join section natural join student WHERE instructor.ID = t1.ID and t1.year=2010 and EXISTS (select * from teaches t2 where instructor.ID >t2.ID)) AND instructor.ID='1'
60| SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 natural join section natural join student WHERE instructor.ID = t1.ID and t1.year=2010 and EXISTS (select * from teaches t2 where t1.ID >t2.ID)) AND instructor.ID='1'
61| SELECT * FROM instructor WHERE EXISTS (SELECT * FROM student where EXISTS (select sum(credits) from course, department where course.dept_name = department.dept_name and student.dept_name=course.dept_name group by credits))
62| SELECT * FROM instructor WHERE EXISTS (SELECT * FROM student where EXISTS (select sum(credits) from course, department where course.dept_name = department.dept_name and student.dept_name>course.dept_name group by credits))
63| SELECT * FROM instructor WHERE EXISTS (SELECT * FROM student where EXISTS (select sum(credits) from course, department where course.dept_name = department.dept_name group by credits))



=========================IN and NOT IN CONNECTIVE==========================
64|select * from instructor where dept_name in (select dept_name from department where building = 'Watson')
65|select * from instructor where dept_name not in (select dept_name from department where building != 'Watson')
66|select count(distinct ID) from takes where (course_id , sec_id , semester , year) in (select course_id , sec_id , semester , year from teaches where teaches.ID = '10101')
67|select count(distinct ID) from takes where (course_id , sec_id , semester , year) not in (select course_id , sec_id , semester , year from teaches where teaches.ID = '10101')

=========================SET OPERATOR QUERIES==========================
68|(select course_id from section where semester = 'Fall' and year = 2009) union (select course_id from section where semester = 'Spring' and year = 2010)
69|(select course_id from section where semester = 'Fall' and year = 2009) union all (select course_id from section where semester = 'Spring' and year = 2010)
70|(select course_id from section where semester = 'Fall' and year = 2009) intersect (select course_id from section where semester = 'Spring' and year = 2010)
71|(select course_id from section where semester = 'Fall' and year = 2009) intersect all (select course_id from section where semester = 'Spring' and year = 2010)
72|(select course_id from section where semester = 'Fall' and year = 2009) except (select course_id from section where semester = 'Spring' and year = 2010)
73|(select course_id from section where semester = 'Fall' and year = 2009) except all (select course_id from section where semester = 'Spring' and year = 2010)

=========================ORDER BY==========================
74|select name from instructor where dept_name = 'Physics' order by name
75|select ID from instructor order by salary desc , name asc
76|select takes.ID, name from takes, student where takes.ID = student.ID and course_id = 'CS-101' and semester='Fall' and year = 2009 order by name


=========================CASE STATEMENT==========================
77| SELECT CASE WHEN name = 'a' THEN '0' ELSE 'b' END AS n FROM instructor
78| SELECT CAST(sum(year) as INT) FROM teaches
