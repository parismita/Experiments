=========================Where Clause Conditions==========================
1|single|select id, name from student where tot_cred>30
=========================Where Clause Conditions: conjunction==========================
2|single|select dept_name,budget from department where budget>40000 and budget<80000
=========================Where Clause Conditions: disjunction==========================
3|single|select building from classroom where capacity > 10 or capacity < 5

=========================Where Clause Conditions: String condition==========================
4|single|select id from instructor where salary>70000 and dept_name = 'cs'
82|single|select instructor.id from instructor inner join teaches on (instructor.ID=teaches.ID) where dept_name not LIKE 'Cs' 
84|single|select instructor.id from instructor inner join teaches on (instructor.ID=teaches.ID) where salary < 70000 and dept_name = 'Cs' 
78|single|select instructor.id from instructor inner join teaches on (instructor.ID=teaches.ID) where dept_name LIKE 'Cs'

=========================Queries with Joins==========================
5|single|select * from instructor, department where instructor.dept_name = department.dept_name
6|single|select name,course_id from instructor,teaches where instructor.ID = teaches.ID
7|single|select * from student join takes on student.ID = takes.ID
8|single|SELECT takes.course_id FROM ((student INNER JOIN takes ON(student.id=takes.id)) INNER JOIN course ON(course.course_id=takes.course_id)) WHERE student.id = '12345'
9|single|select name, title from (instructor inner join teaches on teaches.ID = teaches.ID) join course using (course_id)
74|single|SELECT * FROM COURSE inner join TEACHES ON COURSE.course_id = TEACHES.course_id inner join INSTRUCTOR ON INSTRUCTOR.ID = TEACHES.ID inner join GRADE_VALUE ON GRADE_VALUE.grade = TEACHES.ID
75|single|SELECT * FROM COURSE inner join DEPARTMENT ON COURSE.dept_name = DEPARTMENT.dept_name inner join STUDENT ON STUDENT.dept_name = DEPARTMENT.dept_name inner join TAKES ON TAKES.ID = STUDENT.ID
76|single|SELECT * FROM COURSE inner join DEPARTMENT ON COURSE.dept_name = DEPARTMENT.dept_name inner join STUDENT ON STUDENT.dept_name = DEPARTMENT.dept_name inner join INSTRUCTOR ON INSTRUCTOR.dept_name = DEPARTMENT.dept_name
77|single|SELECT * FROM DEPARTMENT inner join STUDENT ON STUDENT.dept_name = DEPARTMENT.dept_name inner join INSTRUCTOR ON INSTRUCTOR.dept_name = DEPARTMENT.dept_name inner join TAKES ON TAKES.ID = STUDENT.ID

=========================Queries Aggregate without Group By==========================
10|single|select min(salary) from instructor where dept_name = 'Comp. Sci.'
11|single|select max(salary) from instructor where dept_name = 'Comp. Sci.'
12|single|select sum(salary) from instructor where dept_name = 'Comp. Sci.'
13|single|select count(salary) from instructor where dept_name = 'Comp. Sci.'

=========================Queries Aggregate with Group By==========================
14|single|select dept_name, count(id) from student group by dept_name
15|single|select count(DISTINCT name) from student group by dept_name
16|single|select name, avg(salary) from instructor group by name
17|single|SELECT COUNT(*) FROM instructor GROUP BY id, name
18|single|select ID, count(s_id) from instructor left outer join advisor on (instructor.ID = advisor.i_id) group by ID

=========================Queries with Group By and Constrained Aggregation==========================
19|single|select count(dept_name) from student group by name having count(id) < 5
20|single|SELECT dept_name, SUM(credits) FROM course INNER JOIN department USING (dept_name) WHERE credits >= 4 GROUP BY dept_name HAVING SUM(credits) < 25 


=========================Queries with DISTINCT==========================
21|single|SELECT DISTINCT dept_name FROM instructor 
22|single|select distinct s.id, s.name from student s, takes t where s.id = t.id and  t.grade != 'F' 

=========================Queries with NULL and NOT NULL==========================
23|single|select name from instructor where salary is null
24|single|select name from instructor where salary is not null

=========================Queries with Subqueries==========================

=========================From Clause Subqueries==========================
25|from|SELECT course.course_id, d.dept_name  FROM course LEFT OUTER JOIN (SELECT * from department WHERE department.budget > 70000) d using (dept_name)
26|from|select q1.ID from (select * from student where dept_name = 'Comp.Sci') AS q1 natural full outer join (select * from takes where semester = 'Spring' and year = 2009) AS q2
27|from|SELECT foo.name FROM (SELECT * FROM student join takes on (student.ID = takes.ID)) as foo
28|from|SELECT foo.name FROM (SELECT * FROM student join takes on (student.ID = takes.ID)) as foo, (SELECT * FROM student join takes on (student.ID = takes.ID)) as too 
29|from|SELECT * FROM (select credits, sum(credits) from course where credits > '2' group by dept_name, credits) as foo
30|from|SELECT * FROM (select distinct credits from course where credits > '2' ) as foo
79|from|SELECT foo.credits FROM (select credits, count(*) from course where credits > '2' group by dept_name, credits) as foo
31|from|SELECT foo.cnt FROM (select credits, count(*) as cnt from course where credits > '2' group by dept_name, credits) as foo
32|from|SELECT * FROM (select sum(credits), count(credits) from course where credits > '2' group by dept_name, credits) as foo
33|from|SELECT * FROM (select course.dept_name, sum(credits) from course, department where (course.dept_name = department.dept_name) group by course.dept_name, credits) as foo
34|from|SELECT * FROM (select dept_name, count(credits) from course where credits > '2' group by dept_name having sum(credits)>3) as foo
35|from|SELECT * FROM student, (select  sum(credits) from course where credits > '2' group by dept_name having sum(credits)>3) as foo
36|from|SELECT foo.name FROM (SELECT * FROM  (SELECT * FROM  student join takes on (student.ID = takes.ID)) as foo ) as foo

=========================Where Clause Subqueries==========================

=========================Scalar Subqueries==========================
37|scalar/in/notin|SELECT course_id FROM course WHERE credits = (SELECT MIN(credits) FROM course WHERE dept_name = 'CS')
38|scalar/in/notin|select count(room_number) from classroom where  building = (select d.building from department as d where dept_name='Comp. Sci.')
39|scalar/in/notin|select dept_name from department where budget = (select min(budget) from department) and budget = 10

=========================EXIST and NOT EXISTS CONNECTIVE==========================

=========================EXIST Without Correlation: 1 level==========================
40|wherenc|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches where year=2009)

=========================NOT EXIST Without Correlation: 1 level==========================
41|wherenc|SELECT name FROM instructor WHERE NOT EXISTS (SELECT * FROM teaches where year=2009)

=========================EXIST and NOT EXIST with Correlation==========================
42|wherec|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM department WHERE instructor.dept_name = department.dept_name)
43|wherec|SELECT name FROM instructor WHERE NOT EXISTS (SELECT * FROM department WHERE instructor.dept_name = department.dept_name)
44|wherenc|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches inner join section on(teaches.course_id=section.course_id and teaches.sec_id=section.sec_id and teaches.semester=section.semester and teaches.year=section.year) WHERE instructor.ID = teaches.ID and teaches.semester='Spring')
45|wherec|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 WHERE instructor.ID = t1.ID and EXISTS (select * from teaches t2 where t2.ID=t1.ID and t2.year=2010))

46|wherec|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 WHERE instructor.ID = t1.ID and NOT EXISTS (SELECT * FROM teaches t2 WHERE t2.ID=t1.ID and t2.year=2010))
47|wherec|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 inner join section on(t1.course_id=section.course_id and t1.sec_id=section.sec_id and t1.semester=section.semester and t1.year=section.year) WHERE instructor.ID = t1.ID and EXISTS (select * from teaches t2 where t2.ID=t1.ID and t2.year=2010 ))

48|wherec|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 inner join section on(t1.course_id=section.course_id and t1.sec_id=section.sec_id and t1.semester=section.semester and t1.year=section.year) WHERE instructor.ID = t1.ID and t1.year=2010 and EXISTS (select * from teaches t2 where instructor.ID =t2.ID)) AND instructor.ID='1'
49|wherenc|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 inner join section on(t1.course_id=section.course_id and t1.sec_id=section.sec_id and t1.semester=section.semester and t1.year=section.year) WHERE t1.year=2010 and EXISTS (SELECT * FROM section WHERE semester = 'Spring' and year = 2010))
50|wherec|SELECT name FROM instructor inner join department on (instructor.dept_name=department.dept_name) WHERE EXISTS (SELECT * FROM teaches t1 inner join section on(t1.course_id=section.course_id and t1.sec_id=section.sec_id and t1.semester=section.semester and t1.year=section.year) WHERE instructor.ID = t1.ID and NOT EXISTS (select * from teaches t2 where t2.ID=t1.ID and t2.year=2010 ))
51|wherec|SELECT name FROM instructor inner join department on (instructor.dept_name=department.dept_name) WHERE NOT EXISTS (SELECT * FROM teaches t1 inner join section on(t1.course_id=section.course_id and t1.sec_id=section.sec_id and t1.semester=section.semester and t1.year=section.year) WHERE instructor.ID = t1.ID and EXISTS (select * from teaches t2 where t2.ID=t1.ID and t2.year=2010 ))
52|wherec|SELECT name FROM instructor inner join department on (instructor.dept_name=department.dept_name) WHERE NOT EXISTS (SELECT * FROM teaches t1 inner join section on(t1.course_id=section.course_id and t1.sec_id=section.sec_id and t1.semester=section.semester and t1.year=section.year) WHERE instructor.ID = t1.ID and NOT EXISTS (select * from teaches t2 where t2.ID=t1.ID and t2.year=2010 ))
53|wherec|SELECT * FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 WHERE EXISTS (select * from teaches t2 where instructor.ID=t1.ID ))
54|wherec|SELECT instructor.name FROM instructor inner join student on (instructor.ID = student.ID) inner join department on(student.dept_name=department.dept_name) WHERE EXISTS (SELECT * FROM teaches t1 WHERE instructor.ID = t1.ID and t1.semester='Spring' and EXISTS (select * from teaches t2 where t2.ID=t1.ID and t2.year=2010 ))

55|wherec|SELECT name FROM instructor WHERE EXISTS (SELECT * FROM teaches t1 WHERE instructor.ID = t1.ID and EXISTS (select * from teaches t2 where t2.year=2010 and t1.ID = t2.ID ))
56|wherenc|SELECT department.dept_name FROM instructor inner join department on (instructor.dept_name=department.dept_name) WHERE EXISTS (SELECT * FROM teaches t1 inner join section on(t1.course_id=section.course_id and t1.sec_id=section.sec_id and t1.semester=section.semester and t1.year=section.year) WHERE t1.ID = '10101' and  NOT EXISTS (select * from teaches t2 where  t2.year=2010 ))
57|wherenc|SELECT name FROM instructor inner join department on (instructor.dept_name=department.dept_name) WHERE NOT EXISTS (SELECT * FROM teaches t1 inner join section on(t1.course_id=section.course_id and t1.sec_id=section.sec_id and t1.semester=section.semester and t1.year=section.year) WHERE t1.ID = '10101'  and EXISTS (select * from teaches t2 where t2.year=2010 ))
58|wherenc|SELECT name FROM instructor inner join department on (instructor.dept_name=department.dept_name) WHERE NOT EXISTS (SELECT * FROM teaches t1 inner join section on(t1.course_id=section.course_id and t1.sec_id=section.sec_id and t1.semester=section.semester and t1.year=section.year) WHERE t1.ID = '10101' and NOT EXISTS (select * from teaches t2 where  t2.year=2010 ))
59|wherec|SELECT name FROM course, instructor WHERE EXISTS (SELECT * FROM teaches t1 inner join student on(t1.ID=student.ID) WHERE t1.ID = instructor.ID and t1.course_id=course.course_id and t1.year=2010 and EXISTS (select * from student t2 where course.dept_name >t2.dept_name)) AND instructor.ID='1'
60|wherec|SELECT name FROM course, instructor WHERE EXISTS (SELECT * FROM teaches t1 inner join student on(t1.ID=student.ID) WHERE t1.ID = instructor.ID and t1.course_id=course.course_id and t1.year=2010 and EXISTS (select * from student t2 where course.dept_name <t2.dept_name)) AND instructor.ID='1'
61|wherec|SELECT * FROM instructor WHERE EXISTS (SELECT * FROM student where EXISTS (select sum(credits) from course, department where course.dept_name = department.dept_name and student.dept_name=course.dept_name group by credits))
62|wherec|SELECT * FROM instructor WHERE EXISTS (SELECT * FROM student where EXISTS (select sum(credits) from course, department where course.dept_name = department.dept_name and student.dept_name>course.dept_name group by credits))
63|wherec|SELECT * FROM instructor WHERE EXISTS (SELECT * FROM student where EXISTS (select sum(credits) from course, department where course.dept_name = department.dept_name group by credits))
83|wherec|SELECT * FROM instructor WHERE EXISTS (SELECT * FROM student where EXISTS (select sum(credits) from course, department where course.dept_name = department.dept_name group by credits having sum(credits)>5))

=========================IN and NOT IN CONNECTIVE==========================
64|scalar/in/notin|select * from instructor where dept_name in (select dept_name from department where building = 'Watson')
65|scalar/in/notin|select * from instructor where dept_name not in (select dept_name from department where building != 'Watson')
66|scalar/in/notin|select count(distinct ID) from takes where (course_id , sec_id , semester , year) in (select course_id , sec_id , semester , year from teaches where teaches.ID = '10101')
67|scalar/in/notin|select count(distinct ID) from takes where (course_id , sec_id , semester , year) not in (select course_id , sec_id , semester , year from teaches where teaches.ID = '10101')
80|scalar/in/notin|select course_id from takes where course_id  not in ('1', '2')
81|scalar/in/notin|select course_id from takes where course_id  in ('1', '2')

=========================SET OPERATOR QUERIES==========================
68|set|(select course_id from section where semester = 'Fall' and year = 2009) union (select course_id from section where semester = 'Spring' and year = 2010)
69|set|(select course_id from section where semester = 'Fall' and year = 2009) union all (select course_id from section where semester = 'Spring' and year = 2010)
70|set|(select course_id from section where semester = 'Fall' and year = 2009) intersect (select course_id from section where semester = 'Spring' and year = 2010)
71|set|(select course_id from section where semester = 'Fall' and year = 2009) intersect all (select course_id from section where semester = 'Spring' and year = 2010)
72|set|(select course_id from section where semester = 'Fall' and year = 2009) except (select course_id from section where semester = 'Spring' and year = 2010)
73|set|(select course_id from section where semester = 'Fall' and year = 2009) except all (select course_id from section where semester = 'Spring' and year = 2010)



=== TOTAL 84 ===